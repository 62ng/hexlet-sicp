(define (mul-interval x y)
   (let ((x1 (lower-bound x))
         (x2 (upper-bound x))
         (y1 (lower-bound y))
         (y2 (upper-bound y)))
     (let ((x-neg (< x2 0))
           (x-pos (> x1 0))
           (y-neg (< y2 0))
           (y-pos (> y1 0)))
       (cond (x-neg (cond (y-neg (make-interval (* x2 y2) (* x1 y1)))
                          (y-pos (make-interval (* x1 y2) (* x2 y1)))
                          (else (make-interval (* x1 y2) (* x1 y1)))))
             (x-pos (cond (y-neg (make-interval (* x2 y1) (* x1 y2)))
                          (y-pos (make-interval (* x1 y1) (* x2 y2)))
                          (else (make-interval (* x2 y1) (* x2 y2)))))
             (else (cond (y-neg (make-interval (* x2 y1) (* x1 y1)))
                         (y-pos (make-interval (* x1 y2) (* x2 y2)))
                         (else (make-interval (min (* x1 y2) (* x2 y1))
                                              (max (* x1 y1) (* x2 y2))
                                              ))))))))
