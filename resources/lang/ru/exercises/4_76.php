<?php

return [
    'title' => "Раздельная обработка двух подвыражений запроса and",
    'description' => [
        '1' =>
        "Наша реализация ",
        '2' =>
        " в виде последовательной комбинации запросов (рисунок 4.5) изящна, но неэффективна, поскольку при обработке второго запроса приходится просматривать базу данных для каждого кадра, порожденного первым запросом. " .
        "Если в базе данных ",
        '3' =>
        " записей, а типичный запрос порождает число записей, пропорциональное ",
        '4' =>
        " (скажем, ",
        '5' =>
        "), то проход базы данных для каждого кадра, порожденного первым запросом, потребует ",
        '6' =>
        " вызовов сопоставителя. Другой подход может состоять в том, чтобы обрабатывать два подвыражения запроса ",
        '7' =>
        " по отдельности а затем искать совместимые пары входных кадров. Если каждый запрос порождает ",
        '8' =>
        " кадров, то нам придется проделать ",
        '9' =>
        " проверок на совместимость — в ",
        '10' =>
        " раз меньше, чем число сопоставлений при нашем теперешнем методе.",
        '11' =>
        "Постройте реализацию ",
        '12' =>
        " с использованием этой стратегии. " .
        "Вам придется написать процедуру, которая принимает на входе два кадра, проверяет связывания в этих кадрах на совместимость и, если они совместимы, порождает кадр, в котором множества связываний слиты. Эта операция подобна унификации.",
        '13' =>
        "Рис. 4.5. Комбинация двух запросов через and осуществляется последовательной обработкой потока кадров.",
    ],
];
