<?php

return [
    'title' => "Псевдоделение",
    'description' => [
        '1' =>
        "Пусть ",
        '2' =>
        ", ",
        '3' =>
        " и ",
        '4' =>
        " – многочлены",
        '5' =>
        "Теперь пусть ",
        '6' =>
        " будет произведение ",
        '7' =>
        " и ",
        '8' =>
        ", а ",
        '9' =>
        " произведение ",
        '10' =>
        " и ",
        '11' =>
        ". При помощи ",
        '12' =>
        " (упражнение ",
        '13' =>
        ") вычислите НОД ",
        '14' =>
        " и ",
        '15' =>
        ". Обратите внимание, что ответ несовпадает с ",
        '16' =>
        ". Этот пример вводит в вычисление операции с нецелыми числами, и это создает сложности для алгоритма вычисления НОД. " .
        "Чтобы понять, что здесь происходит, попробуйте включить трассировку в ",
        '17' =>
        " при вычислении НОД либо проведите деление вручную.",
        '18' =>
        "Проблему, которую демонстрирует упражнение ",
        '19' =>
        ", можно решить, если мы используем следующий вариант алгоритма вычисления НОД (который работает только для многочленов с целыми коэффициентами). " .
        "Прежде, чем проводить деление многочленов при вычислении НОД, мы умножаем делимое на целую константу, которая выбирается так, чтобы в процессе деления не возникло никаких дробей. " .
        "Результат вычисления будет отличаться от настоящего НОД на целую константу, но при приведении рациональных функций к наименьшему знаменателю это несущественно; " .
        "будет проведено деление и числителя, и знаменателя на НОД, так что константный множитель сократится.",
        '20' =>
        "Выражаясь более точно, если ",
        '21' =>
        " и ",
        '22' =>
        " — многочлены, определим ",
        '23' =>
        " как порядок ",
        '24' =>
        " (то есть порядок его старшего терма), а ",
        '25' =>
        " как порядок ",
        '26' =>
        ". Пусть ",
        '27' =>
        " будет коэффициент старшего терма ",
        '28' =>
        ". В таком случае, можно показать, что если мы домножим ",
        '29' =>
        " на множитель целости (integerizing factor) ",
        '30' =>
        ", то получившийся многочлен можно будет поделить на ",
        '31' =>
        " алгоритмом ",
        '32' =>
        ", получив результат, в котором не будет никаких дробей. " .
        "Операция домножения делимого на такую константу, а затем деления, иногда называется псевдоделением (pseudodivision) ",
        '33' =>
        " на ",
        '34' =>
        ". Остаток такого деления называется псевдоостатком (pseudoremainder).",
    ],
];
